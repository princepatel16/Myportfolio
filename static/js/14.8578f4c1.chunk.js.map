{"version":3,"sources":["components/Portrait/index.js"],"names":["RectAreaLightUniformsLib","init","Portrait","className","delay","rest","rgbBackgroundLight","themeId","useTheme","container","useRef","canvas","renderer","camera","scene","composer","lights","prefersReducedMotion","usePrefersReducedMotion","isInViewport","useInViewport","useEffect","clientWidth","clientHeight","current","WebGLRenderer","alpha","antialias","powerPreference","setSize","setPixelRatio","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding","PerspectiveCamera","position","z","Scene","fog","Fog","EffectComposer","frameBufferType","HalfFloatType","renderPass","RenderPass","addPass","normalPass","NormalPass","ssaoEffect","SSAOEffect","renderTarget","texture","blendFunction","BlendFunction","MULTIPLY","samples","rings","distanceThreshold","distanceFalloff","rangeThreshold","rangeFalloff","luminanceInfluence","radius","scale","bias","bloomEffect","BloomEffect","opacity","SCREEN","kernelSize","KernelSize","SMALL","luminanceThreshold","luminanceSmoothing","height","blendMode","value","effectPass","EffectPass","renderToScreen","GLTFLoader","load","portraitModelPath","model","y","add","render","cleanScene","cleanRenderer","ambientLight","AmbientLight","rectLight1","RectAreaLight","set","lookAt","rectLight2","forEach","light","color","Color","rgbToThreeColor","far","removeLights","rotationSpring","rotationSpringValue","onMouseMove","event","rotation","innerWidth","innerHeight","window","clientX","clientY","x","spring","from","get","to","stiffness","damping","velocity","getVelocity","restSpeed","mass","start","addEventListener","removeEventListener","stop","handleResize","aspect","updateProjectionMatrix","classNames","ref","style","role","aria-label","aria-hidden"],"mappings":"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","file":"static/js/14.8578f4c1.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport {\n  WebGLRenderer,\n  ACESFilmicToneMapping,\n  sRGBEncoding,\n  PerspectiveCamera,\n  Scene,\n  Fog,\n  Color,\n  HalfFloatType,\n  AmbientLight,\n  RectAreaLight,\n} from 'three';\nimport {\n  EffectComposer,\n  RenderPass,\n  NormalPass,\n  SSAOEffect,\n  BlendFunction,\n  BloomEffect,\n  KernelSize,\n  EffectPass,\n} from 'postprocessing';\nimport { spring, value } from 'popmotion';\nimport { RectAreaLightUniformsLib } from 'three/examples/jsm/lights/RectAreaLightUniformsLib.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { usePrefersReducedMotion, useInViewport } from 'hooks';\nimport { cleanScene, cleanRenderer, removeLights } from 'utils/three';\nimport { rgbToThreeColor } from 'utils/style';\nimport { useTheme } from 'components/ThemeProvider';\nimport portraitModelPath from 'assets/portrait.glb';\nimport './index.css';\n\nRectAreaLightUniformsLib.init();\n\nconst Portrait = ({ className, delay, ...rest }) => {\n  const { rgbBackgroundLight, themeId } = useTheme();\n  const container = useRef();\n  const canvas = useRef();\n  const renderer = useRef();\n  const camera = useRef();\n  const scene = useRef();\n  const composer = useRef();\n  const lights = useRef();\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const isInViewport = useInViewport(container);\n\n  // Init scene and models\n  useEffect(() => {\n    const { clientWidth, clientHeight } = container.current;\n\n    renderer.current = new WebGLRenderer({\n      alpha: true,\n      antialias: false,\n      canvas: canvas.current,\n      powerPreference: 'high-performance',\n    });\n    renderer.current.setSize(clientWidth, clientHeight);\n    renderer.current.setPixelRatio(2);\n    renderer.current.toneMapping = ACESFilmicToneMapping;\n    renderer.current.outputEncoding = sRGBEncoding;\n\n    camera.current = new PerspectiveCamera(45, clientWidth / clientHeight, 0.5, 2.25);\n    camera.current.position.z = 0.8;\n\n    scene.current = new Scene();\n    scene.current.fog = new Fog(0xffffff, 0, 2.25);\n\n    composer.current = new EffectComposer(renderer.current, {\n      frameBufferType: HalfFloatType,\n    });\n    const renderPass = new RenderPass(scene.current, camera.current);\n    composer.current.addPass(renderPass);\n\n    const normalPass = new NormalPass(scene.current, camera.current);\n\n    const ssaoEffect = new SSAOEffect(camera.current, normalPass.renderTarget.texture, {\n      blendFunction: BlendFunction.MULTIPLY,\n      samples: 21,\n      rings: 4,\n      distanceThreshold: 1.0,\n      distanceFalloff: 0.0,\n      rangeThreshold: 0.015,\n      rangeFalloff: 0.002,\n      luminanceInfluence: 0.9,\n      radius: 20,\n      scale: 0.25,\n      bias: 0.25,\n    });\n\n    const bloomEffect = new BloomEffect({\n      opacity: 1,\n      blendFunction: BlendFunction.SCREEN,\n      kernelSize: KernelSize.SMALL,\n      luminanceThreshold: 0.65,\n      luminanceSmoothing: 0.07,\n      height: 600,\n    });\n    bloomEffect.blendMode.opacity.value = 1;\n\n    const effectPass = new EffectPass(camera.current, ssaoEffect, bloomEffect);\n    effectPass.renderToScreen = true;\n\n    composer.current.addPass(normalPass);\n    composer.current.addPass(effectPass);\n\n    const modelLoader = new GLTFLoader();\n\n    modelLoader.load(portraitModelPath, model => {\n      model.scene.position.y = -1.6;\n      scene.current.add(model.scene);\n\n      composer.current.render();\n    });\n\n    return () => {\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n  }, []);\n\n  // Lights\n  useEffect(() => {\n    const ambientLight = new AmbientLight(0xffffff, themeId === 'dark' ? 0.1 : 0.2);\n\n    const rectLight1 = new RectAreaLight(0xffffff, 6, 10, 10);\n    rectLight1.position.set(4.5, -1.3, -3);\n    rectLight1.lookAt(0, 0, 0);\n\n    const rectLight2 = new RectAreaLight(0xffffff, 6, 15, 15);\n    rectLight2.position.set(-10, 0.7, -10);\n    rectLight2.lookAt(0, 0, 0);\n\n    lights.current = [ambientLight, rectLight1, rectLight2];\n    lights.current.forEach(light => scene.current.add(light));\n\n    scene.current.fog.color = new Color(...rgbToThreeColor(rgbBackgroundLight));\n    scene.current.fog.far = 10;\n\n    return () => {\n      removeLights(lights.current);\n    };\n  }, [themeId, rgbBackgroundLight]);\n\n  // Handle mouse move animation\n  useEffect(() => {\n    let rotationSpring;\n    let rotationSpringValue;\n\n    const onMouseMove = event => {\n      const { rotation } = scene.current;\n      const { innerWidth, innerHeight } = window;\n\n      const position = {\n        x: (event.clientX - innerWidth / 2) / innerWidth,\n        y: (event.clientY - innerHeight / 2) / innerHeight,\n      };\n\n      if (!rotationSpringValue) {\n        rotationSpringValue = value({ x: rotation.x, y: rotation.y }, ({ x, y }) => {\n          rotation.set(x, y, rotation.z);\n          composer.current.render();\n        });\n      }\n\n      rotationSpring = spring({\n        from: rotationSpringValue.get(),\n        to: { x: position.y / 2, y: position.x / 2 },\n        stiffness: 40,\n        damping: 40,\n        velocity: rotationSpringValue.getVelocity(),\n        restSpeed: 0.00001,\n        mass: 1.4,\n      }).start(rotationSpringValue);\n    };\n\n    if (isInViewport && !prefersReducedMotion) {\n      window.addEventListener('mousemove', onMouseMove);\n    }\n\n    return function cleanup() {\n      window.removeEventListener('mousemove', onMouseMove);\n\n      rotationSpring?.stop();\n    };\n  }, [isInViewport, prefersReducedMotion]);\n\n  // Handles window resize\n  useEffect(() => {\n    const handleResize = () => {\n      const { clientWidth, clientHeight } = container.current;\n\n      renderer.current.setSize(clientWidth, clientHeight);\n      composer.current.setSize(clientWidth, clientHeight);\n      camera.current.aspect = clientWidth / clientHeight;\n      camera.current.updateProjectionMatrix();\n\n      // Render a single frame on resize\n      composer.current.render();\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <div\n      className={classNames('portrait', `portrait--${themeId}`, className)}\n      ref={container}\n      style={{ '--delay': delay }}\n      role=\"img\"\n      aria-label=\"A 3D portrait of myself.\"\n      {...rest}\n    >\n      <canvas aria-hidden className=\"portrait__canvas\" ref={canvas} />\n    </div>\n  );\n};\n\nexport default Portrait;\n"],"sourceRoot":""}