{"version":3,"sources":["posts/observer-api-for-modern-javascript.mdx"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","tableOfContents","id","level","title","Fragment","MDXTag","name","children","frontMatter"],"mappings":"yGACA,mNAEO,MAAMA,EAAc,CAAC,KAAO,aAAa,QAAU,KAAK,KAAO,OAAO,MAAQ,KAM/EC,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,qBAAK,kGACL,qBAAK,mIACL,iBAAQ,CACN,GAAM,oBACL,+BAAGC,WAAW,MAAS,CACtB,KAAQ,sEACL,qBACP,qBAAK,sFACL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,siJAGhB,qBAAK,4JACL,qBAAK,iGACL,iBAAQ,CACN,GAAM,wBACL,+BAAGA,WAAW,MAAS,CACtB,KAAQ,0EACL,yBACP,qBAAK,0GACL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,kpGAGhB,qBAAK,0HACL,iBAAQ,CACN,GAAM,kBACL,+BAAGA,WAAW,MAAS,CACtB,KAAQ,oEACL,mBACP,qBAAK,wHACL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,02HAGhB,qBAAK,kGACL,iBAAQ,CACN,GAAM,uBACL,+BAAGA,WAAW,MAAS,CACtB,KAAQ,yEACL,wBACP,qBAAK,uGACL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,0xIAGhB,qBAAK,qIACL,iBAAQ,CACN,GAAM,cACH,cACL,qBAAK,mLAKTJ,EAAWK,gBAAiB,EACrB,MAAMC,EAAkB,CAACL,EAAW,KAAO,CAChD,CACEM,GAAI,mBACJC,MAAO,EACPC,MAAO,YAAC,IAAMC,SAAP,KAAgB,YAACC,OAAD,CAAQC,KAAK,IAAIX,WAAYA,EAAYC,MAAO,CAAC,KAAO,sEAAwE,qBACvJW,SAAU,IAId,CACIN,GAAI,uBACJC,MAAO,EACPC,MAAO,YAAC,IAAMC,SAAP,KAAgB,YAACC,OAAD,CAAQC,KAAK,IAAIX,WAAYA,EAAYC,MAAO,CAAC,KAAO,0EAA4E,yBAC3JW,SAAU,IAId,CACIN,GAAI,iBACJC,MAAO,EACPC,MAAO,YAAC,IAAMC,SAAP,KAAgB,YAACC,OAAD,CAAQC,KAAK,IAAIX,WAAYA,EAAYC,MAAO,CAAC,KAAO,oEAAsE,mBACrJW,SAAU,IAId,CACIN,GAAI,sBACJC,MAAO,EACPC,MAAO,YAAC,IAAMC,SAAP,KAAgB,YAACC,OAAD,CAAQC,KAAK,IAAIX,WAAYA,EAAYC,MAAO,CAAC,KAAO,yEAA2E,wBAC1JW,SAAU,IAId,CACIN,GAAI,aACJC,MAAO,EACPC,MAAO,aACPI,SAAU,KAMDC,EAAc,CACzB,KAAQ,qCACR,MAAS,yCACT,YAAe,iGACf,OAAU,yCACV,kBAAqB,qDACrB,UAAa,mDACb,KAAQ,CACN,cACA,aACA,gBAEF,KAAQ,2BACR,SAAY","file":"static/js/19.4fddcef5.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.68,\"time\":160800,\"words\":536}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Observer APIs are handy in detecting change and can be used to create responsive applications.`}</p>\n    <p>{`There are four different types of observers that observe different things — from the DOM to browser performance.`}</p>\n    <h2 {...{\n      \"id\": \"mutationobserver\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\"\n      }}>{`MutationObserver`}</a></h2>\n    <p>{`MutationObserver observes the DOM tree, listening for the changes made to the DOM.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// Select the node that will be observed for mutations</span>\\n<span class=\\\"token keyword\\\">const</span> targetNode <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'element'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Options for the observer (which mutations to observe)</span>\\n<span class=\\\"token keyword\\\">const</span> config <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  attributes<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  childList<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  subtree<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Create an observer instance linked to a callback to execute when mutations are observed</span>\\n<span class=\\\"token keyword\\\">const</span> observer <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">MutationObserver</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">mutations<span class=\\\"token punctuation\\\">,</span> observer</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  mutations<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">mutation</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>mutation<span class=\\\"token punctuation\\\">.</span>type <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'childList'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'A child node has been added or removed.'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>mutation<span class=\\\"token punctuation\\\">.</span>type <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'attributes'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">The </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>mutation<span class=\\\"token punctuation\\\">.</span>attributeName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> attribute was modified.</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Start observing the target node for configured mutations</span>\\nobserver<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">observe</span><span class=\\\"token punctuation\\\">(</span>targetNode<span class=\\\"token punctuation\\\">,</span> config<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Later, you can stop observing</span>\\nobserver<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">disconnect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`We will be notified when an element’s attributes, text, or contents changed and also monitors the child nodes whether it has been added or removed.`}</p>\n    <p>{`This is particularly useful for resizing elements in the DOM as well as resetting DOM values.`}</p>\n    <h2 {...{\n      \"id\": \"intersectionobserver\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\"\n      }}>{`IntersectionObserver`}</a></h2>\n    <p>{`IntersectionObserver observes a DOM element’s visibility, listening for changes in its positions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// Select the node that will be observed for mutations</span>\\n<span class=\\\"token keyword\\\">const</span> targetNode <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'element'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Options for the observer</span>\\n<span class=\\\"token keyword\\\">const</span> config <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  rootMargin<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'-100% 0px 0px 0px'</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Create an observer instance linked to a callback to execute when entries are observed</span>\\n<span class=\\\"token keyword\\\">const</span> intersectionObserver <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">IntersectionObserver</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">entries<span class=\\\"token punctuation\\\">,</span> observer</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  entries<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">entry</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>entry<span class=\\\"token punctuation\\\">.</span>isIntersecting<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Observing.'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n      <span class=\\\"token comment\\\">// Later, you can stop observing</span>\\n      observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unobserve</span><span class=\\\"token punctuation\\\">(</span>entry<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Start observing</span>\\nintersectionObserver<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">observe</span><span class=\\\"token punctuation\\\">(</span>targetNode<span class=\\\"token punctuation\\\">,</span> config<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`This is very useful in lazy loading and animating content based on the target element’s visibility and positions.`}</p>\n    <h2 {...{\n      \"id\": \"resizeobserver\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\"\n      }}>{`ResizeObserver`}</a></h2>\n    <p>{`ResizeObserver observes elements’ content or border-box, listening for changes in the element and its children.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// Select the node that will be observed for mutations</span>\\n<span class=\\\"token keyword\\\">const</span> targetNode <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'element'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> resizeObserver <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ResizeObserver</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">entries<span class=\\\"token punctuation\\\">,</span> observer</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  entries<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">entry</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Element size: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>entry<span class=\\\"token punctuation\\\">.</span>width<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px x </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>entry<span class=\\\"token punctuation\\\">.</span>height<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Element padding: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>entry<span class=\\\"token punctuation\\\">.</span>top<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px ; </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>entry<span class=\\\"token punctuation\\\">.</span>left<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// Later, you can stop observing</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unobserve</span><span class=\\\"token punctuation\\\">(</span>entry<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Start observing</span>\\nresizeObserver<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">observe</span><span class=\\\"token punctuation\\\">(</span>targetNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`This observer is relevant when creating dynamic content that wraps based on input or triggers.`}</p>\n    <h2 {...{\n      \"id\": \"performanceobserver\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\"\n      }}>{`PerformanceObserver`}</a></h2>\n    <p>{`PerformanceObserver observes performance measurement events, listening for new performance entries.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// Options for the observer</span>\\n<span class=\\\"token keyword\\\">const</span> config <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  entryTypes<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'resource'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'mark'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'measure'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> observer <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">PerformanceObserver</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">list</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  list<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getEntries</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">entry</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// Display each reported measurement on console</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Name: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>entry<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Type: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>entry<span class=\\\"token punctuation\\\">.</span>entryType<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Start: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>entry<span class=\\\"token punctuation\\\">.</span>startTime<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Duration: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>entry<span class=\\\"token punctuation\\\">.</span>duration<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Start observing</span>\\nobserver<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">observe</span><span class=\\\"token punctuation\\\">(</span>config<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nperformance<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">mark</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'registered-observer'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`This is useful for receiving performance notifications to be ran during idle time without competing with critical rendering work.`}</p>\n    <h2 {...{\n      \"id\": \"conclusion\"\n    }}>{`Conclusion`}</h2>\n    <p>{`The observer APIs unlock the web’s hidden superpowers to create truly responsive experiences, from lazy-loading critical content to non-intrusive performance monitoring.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"mutationobserver\",\n    level: 2,\n    title: <React.Fragment><MDXTag name=\"a\" components={components} props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\"}}>{`MutationObserver`}</MDXTag></React.Fragment>,\n    children: [\n        \n      ]\n  },\n{\n    id: \"intersectionobserver\",\n    level: 2,\n    title: <React.Fragment><MDXTag name=\"a\" components={components} props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\"}}>{`IntersectionObserver`}</MDXTag></React.Fragment>,\n    children: [\n        \n      ]\n  },\n{\n    id: \"resizeobserver\",\n    level: 2,\n    title: <React.Fragment><MDXTag name=\"a\" components={components} props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\"}}>{`ResizeObserver`}</MDXTag></React.Fragment>,\n    children: [\n        \n      ]\n  },\n{\n    id: \"performanceobserver\",\n    level: 2,\n    title: <React.Fragment><MDXTag name=\"a\" components={components} props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\"}}>{`PerformanceObserver`}</MDXTag></React.Fragment>,\n    children: [\n        \n      ]\n  },\n{\n    id: \"conclusion\",\n    level: 2,\n    title: \"Conclusion\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {\n  \"slug\": \"observer-api-for-modern-javascript\",\n  \"title\": \"The Observer API for Modern JavaScript\",\n  \"description\": \"Observer APIs are handy in detecting change and can be used to create responsive applications.\",\n  \"banner\": \"observer-api-for-modern-javascript.jpg\",\n  \"bannerPlaceholder\": \"observer-api-for-modern-javascript-placeholder.jpg\",\n  \"bannerAlt\": \"JavaScript observer illustration by indepth.dev.\",\n  \"tags\": [\n    \"development\",\n    \"javascript\",\n    \"optimization\"\n  ],\n  \"date\": \"2020-09-27T00:00:00.000Z\",\n  \"readTime\": \"00:02:00:00\"\n}\n\n"],"sourceRoot":""}